name: Code Coverage

on: [pull_request]

jobs:
  base_branch_cov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
       
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
       
      - name: Install dependencies
        run: dotnet restore
       
      - name: Run tests with coverage
        run: |
          dotnet test --configuration Release \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=lcov \
            /p:CoverletOutput=./coverage/coverage.info
       
      - name: Verify coverage file exists
        run: |
          ls -la ./coverage/
          if [ ! -f "./coverage/coverage.info" ]; then
            echo "Coverage file not found!"
            exit 1
          fi

      - name: Debug - List all generated files
        run: |
          echo "All files in current directory:"
          find . -type f -name "*coverage*" -o -name "*.lcov" -o -name "*.info"    
       
      - name: Upload code coverage for ref branch
        uses: actions/upload-artifact@v4
        with:
          name: ref-coverage-info
          path: ./coverage/coverage.info

  checks:
    needs: base_branch_cov
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
       
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
       
      - name: Install dependencies
        run: dotnet restore
       
      - name: Download code coverage report from base branch
        uses: actions/download-artifact@v4
        with:
          name: ref-coverage-info
          path: ./base-coverage/
       
      - name: Run tests with coverage
        run: |
          dotnet test --configuration Release \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=lcov \
            /p:CoverletOutput=./coverage/coverage.info
       
      - name: Verify coverage files exist
        run: |
          echo "Current branch coverage:"
          ls -la ./coverage/
          echo "Base branch coverage:"
          ls -la ./base-coverage/
       
      - name: Generate Barecheck Code Coverage report
        uses: barecheck/code-coverage-action@v1
        with:
          barecheck-github-app-token: ${{ secrets.BARECHECK_GITHUB_APP_TOKEN }}
          lcov-file: "./coverage/coverage.info"
          base-lcov-file: "./base-coverage/coverage.info"
          minimum-ratio: 0
          send-summary-comment: true
          show-annotations: "warning"